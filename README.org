#+TITLE: Moom - A Moom port to GNU Emacs
#+STARTUP: showall
#+SETUPFILE: theme-readtheorg.setup
#+LINK: submodule https://github.com/takaxp/moom-images/blob/master/

[[https://pxaka.tokyo/#/moom][file:https://pxaka.tokyo/packages/moom-badge.svg]]

/Make your dominant hand FREE from your mouse/ :)

* Setup

After installing =moom.el= and =moom-font.el= (optional), activate =moom= by =(moom-mode 1)= in your =init.el=. This module requires [[https://www.gnu.org/software/emacs/][GNU Emacs]] *25.1 or later*.

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  ;; add settings here ...
  (moom-mode 1))
#+END_SRC

or

#+BEGIN_SRC emacs-lisp
(when (require 'moom nil t)
  ;; add settings here ...
  (moom-mode 1))
#+END_SRC

* A set of commands to control frame position and size by keyboard

#+CAPTION: demo for moving and zooming, fullscreen
[[https://github.com/takaxp/moom-images/blob/master/demo1.gif]]

Note - This module has basically been tested on [[https://www.apple.com/macos/high-sierra/][macOS High Sierra]] with a Full HD (1920x1080) single display.

** Move

 - moom-move-frame

*** Horizontal

 - moom-move-frame-left
 - moom-move-frame-right

*** Center

 - moom-move-frame-to-center
 - moom-move-frame-to-vertical-center
 - moom-move-frame-to-horizontal-center

** Fit to edge

 - moom-move-frame-to-edge-left
 - moom-move-frame-to-edge-right
 - moom-move-frame-to-edge-top
 - moom-move-frame-to-edge-bottom

** Expand

These functions will not change font size.

 - moom-change-frame-width-single
 - moom-change-frame-width-double
 - moom-change-frame-width-half-again
 - moom-change-frame-width
 - moom-change-frame-height
 - moom-cycle-frame-height

** Fill display

These functions normally change font size. But the behavior can be changed by =M-x moom-toggle-font-module=.

 - moom-fill-screen
 - moom-fill-top
 - moom-fill-bottom
 - moom-fill-left
 - moom-fill-right
 - moom-fill-top-left
 - moom-fill-top-right
 - moom-fill-bottom-left
 - moom-fill-bottom-right
 - moom-fill-band

** Other functions

 - moom-reset
 - moom-update-height-steps
 - moom-screen-margin ~;; currently supports top or bottom margins.~
 - moom-restore-last-status
 - moom-toggle-font-module
 - moom-toggle-frame-maximized
 - moom-cycle-line-spacing
 - moom-reset-line-spacing
 - moom-print-status
 - moom-version

*** How to setup Top and Bottom margin

Just provide a list to setup Top and/or Bottom margin of screen. Currently, it supports Top and Bottom margins. If you set the optional 2nd argument as =t=, then the frame will be automatically resized for full screen with given margins.

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (moom-screen-margin '(100 200 0 0))) ;; {top, bottom, left, right}
#+END_SRC

For macOS users, the default margin is ='(23 0 0 0)=, but for other system types, it is not configured when you activate =moom-mode=.

* Extension to integrate font resizing

No need to load =moom-font.el= explicitly. If the package is installed in your system, then it will be activated automatically. The package is basically provided for the users who rely on Japanese fonts.

#+CAPTION: demo for increasing and decreasing fonts, fullscreen
[[https://github.com/takaxp/moom-images/blob/master/demo2.gif]]

** Setting

=moom-font-ascii=, =moom-font-ja=, =moom-font-ja-scale= should be configured manually according to your environment. The default values are =Monaco=, =Migu 2M=, =1.2=. If you don't know your font, you can easily check by =M-x describe-char= on a character. In future, the font types will be automatically identified without user settings.

#+BEGIN_SRC emacs-lisp
;; An example setting
(with-eval-after-load "moom-font"
  (setq moom-font-ascii "Menlo")
  (setq moom-font-ja "Osaka") ;; Hiragino Maru Gothic Pro
  (setq moom-font-ja-scale 1.2))
#+END_SRC

** Resize font

 - moom-font-increase
 - moom-font-decrease
 - moom-font-size-reset

* User variables
** moom.el

#+CAPTION: User variables in moom.el
|                              | default      | type    |
|------------------------------+--------------+---------|
| moom-move-frame-pixel-offset | '(0 . 0)     | sexp    |
| moom-min-frame-height        | 16           | integer |
| moom-init-line-spacing       | line-spacing | float   |
| moom-min-line-spacing        | 0.1          | float   |
| moom-max-line-spacing        | 0.8          | float   |
| moom-frame-width-single      | 80           | integer |
| moom-frame-width-double      | 163          | integer |
| moom-horizontal-shifts       | '(200 200)   | choice  |
| moom-verbose                 | nil          | boolean |
| moom-lighter                 | Moom         | string  |

** moom-font.el

#+CAPTION: User variables in moom-font.el
|                     | default | type    |
|---------------------+---------+---------|
| moom-font-ja        | Migu 2M | string  |
| moom-font-ascii     | Monaco  | string  |
| moom-font-init-size | 12      | integer |
| moom-font-ja-scale  | 1.2     | float   |
| moom-font-verbose   | nil     | boolean |

* Example keybindings
** Overview

In general, =Cmd-<TAB>= is used to switch windows, which is not limited to Emacs.app. So it is natural to concentrate all keybindings associated to control frame position and size into the left side of your keyboard with pressing =Cmd=. The following example keybindings are basically designed in that manner.

#+CAPTION: Assgined keys
[[https://github.com/takaxp/moom-images/blob/master/layout.png]]

** Move

[[https://github.com/takaxp/moom-images/blob/master/shifts.gif]] [[https://github.com/takaxp/moom-images/blob/master/move-right.gif]] [[https://github.com/takaxp/moom-images/blob/master/center.gif]]

#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "M-0") 'moom-move-frame) ;; to top-left corner
(global-set-key (kbd "M-1") 'moom-move-frame-left)
(global-set-key (kbd "M-2") 'moom-move-frame-to-center)
(global-set-key (kbd "M-3") 'moom-move-frame-right)
#+END_SRC

** Fit

[[https://github.com/takaxp/moom-images/blob/master/edges.gif]] [[https://github.com/takaxp/moom-images/blob/master/corners.gif]]

#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "M-<f1>") 'moom-move-frame-to-edge-left)
(global-set-key (kbd "M-<f3>") 'moom-move-frame-to-edge-right)
(global-set-key (kbd "<f1>") 'moom-move-frame-to-edge-top)
(global-set-key (kbd "S-<f1>") 'moom-move-frame-to-edge-bottom)
#+END_SRC

** Expand
[[https://github.com/takaxp/moom-images/blob/master/cycle-height.gif]] [[https://github.com/takaxp/moom-images/blob/master/expand.gif]]

#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "<f2>") 'moom-cycle-frame-height)
(with-eval-after-load "moom"
  (define-key moom-mode-map (kbd "C-c f s") 'moom-change-frame-width-single)
  (define-key moom-mode-map (kbd "C-c f d") 'moom-change-frame-width-double)
  (define-key moom-mode-map (kbd "C-c f a") 'moom-change-frame-width-half-again))
#+END_SRC

** Fill


[[https://github.com/takaxp/moom-images/blob/master/fill.gif]] [[https://github.com/takaxp/moom-images/blob/master/quarters.gif]]

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (define-key moom-mode-map (kbd "C-c f f t") 'moom-fill-top)
  (define-key moom-mode-map (kbd "C-c f f b") 'moom-fill-bottom)
  (define-key moom-mode-map (kbd "C-c f f l") 'moom-fill-left)
  (define-key moom-mode-map (kbd "C-c f f r") 'moom-fill-right)
  (define-key moom-mode-map (kbd "C-c f f 1") 'moom-fill-top-left)
  (define-key moom-mode-map (kbd "C-c f f 2") 'moom-fill-top-right)
  (define-key moom-mode-map (kbd "C-c f f 3") 'moom-fill-bottom-left)
  (define-key moom-mode-map (kbd "C-c f f 4") 'moom-fill-bottom-right)
  (define-key moom-mode-map (kbd "C-c f f m") 'moom-fill-band))
#+END_SRC

** Fill (screen by toggle)

[[https://github.com/takaxp/moom-images/blob/master/fill-screen.gif]]

#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "M-<f2>") 'moom-toggle-frame-maximized)
#+END_SRC

** Reset and resize
*** Reset Frame size, position, and font size

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (define-key moom-mode-map (kbd "C-c C-0") 'moom-reset))
#+END_SRC

*** Font size (require moom-font.el)

#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C--") 'moom-font-decrease)
(global-set-key (kbd "C-=") 'moom-font-increase)
(global-set-key (kbd "C-0") 'moom-font-size-reset)
(global-set-key (kbd "C-_") 'text-scale-decrease) ;; built-in for ascii
(global-set-key (kbd "C-+") 'text-scale-increase) ;; built-in for ascii

;; Recommended for stable presentation during font size increasing
(add-hook 'moom-font-after-resize-hook #'moom-move-frame-to-edge-top)
#+END_SRC

* Collaboration with other packages
** Org mode (org-agenda)

Expand the frame width temporarily during org-agenda is active.

[[https://github.com/takaxp/moom-images/blob/master/org-agenda.gif]]

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (with-eval-after-load "org"
    (add-hook 'org-agenda-mode-hook #'moom-change-frame-width-half-again)
    (defun advice:org-agenda--quit (&optional _bury)
      (moom-change-frame-width))
    (advice-add 'org-agenda--quit :after #'advice:org-agenda--quit)))
#+END_SRC

** Org mode (org-tree-slide)

Entering quickly to the full screen presentation with [[https://github.com/takaxp/org-tree-slide][org-tree-slide.el]]. No additional settings are required. Just =M-x moom-toggle-frame-maximized=.

[[https://github.com/takaxp/moom-images/blob/master/org-tree-slide.gif]]

** Org mode

Note - /Under consideration, but you can try./

Run =org-redisplay-inline-images= after font resizing to synchronize the image width and font size automatically.

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (with-eval-after-load "org"
    (add-hook 'moom-font-after-resize-hook #'org-redisplay-inline-images)))
#+END_SRC

* Hooks

 - moom-before-fill-screen-hook
 - moom-after-fill-screen-hook
 - moom-resize-frame-height-hook
 - moom-font-before-resize-hook (in moom-font.el)
 - moom-font-after-resize-hook (in moom-font.el)

* Acknowledgment

This package is highly inspired from [[https://manytricks.com/moom/]["Moom"]] released by [[https://manytricks.com/][Many Tricks]]. Moom stands for "Mo"ve and zo"om". Cool!

If you like and need the capabilities of changing window position and size by keyboard at the OS level, buy [[https://manytricks.com/moom/][Moom]] now!

** Keycastr

For writing README, [[https://github.com/keycastr/keycastr][keycastr]] was utilized to capture keystrokes of each command. Thanks! but ~Shift+F1~ was recorded as ~?~. Haha... :p
